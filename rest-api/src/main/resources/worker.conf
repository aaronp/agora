include "agora-defaults.conf"

port: 8081
port: ${?WORKER_PORT}

actorSystemName="worker"

exchange: {
  include "exchange.conf"
}

# The initial number of work items to request for subscriptions
initialRequest: 3
initialRequest: ${?INITIAL_REQUEST}

# should this worker also act as an exchange?
includeExchangeRoutes : true
includeExchangeRoutes = ${?INCLUDE_EXCHANGE}

enableSupportRoutes : true

# The configuration for the default work subscription
subscription {

  # contains some arbitrary json for jobs to potentially match against
  details: {

    runUser: ""
    runUser: ${?USER}

    # If set, this is the host name : host port to use in the subscription details to the exchange
    # See SubscriptionConfig
    resolvedHostPort: ""
    resolvedHostPort: ${?RESOLVED_HOST_PORT}

    # the default relative url used to send requests to
    # e.g. if it's 'foo', then requests will be sent to {location}/foo
    path: "rest/worker/handler"

    name: "worker"

    # The subscription key to use if non-empty
    id: ""
  }
  # contains 'JPredicate' json criteria to match submitted jobs' 'job' section
  jobCriteria: "match-all"
  # contains 'JPredicate' json criteria to match submitted jobs' 'submissionDetails' section
  submissionCriteria: "match-all"

  # Other subscriptions to use when taking/replacing work items.
  # The typical case is to leave it empty, in which case the work subsription
  # stands alone: 'take' requests for work are incremented against a counter
  # kept for this subscription, and work matches decrement the counter.
  #
  # In the case where it's not-empty, This subscription will be involved in matches
  # itself just like the case where it's left empty, but the the referenced subscriptions
  # are the ones which are incremented/decremented on 'take' calls.
  #
  # The referenced subscriptions may themselves reference other subscriptions, but an error is thrown
  # in the case where thye form circular references.
  #
  # The references subscriptions may not yet exist, in which case their work count will be zero.
  subscriptionReferences : []
}

#timeout to use when unmarshalling requests
unmarshalTimeout : 2020ms
